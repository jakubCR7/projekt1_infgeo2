from numpy import *
import sys
def is_float(string):
    try:
        float(string)
        return True
    except ValueError:
        return False
class Transformacje:
    def __init__(self, model: str = 'wgs80'):
        if model == "wgs84":
            self.a = 6378137.0 # semimajor_axis
            self.b = 6356752.31424518 # semiminor_axis
        elif model == "grs80":
            self.a = 6378137.0
            self.b = 6356752.31414036
        elif model == "Krasowski":
            self.a = 6378245.0
            self.b = 4
        else:
            raise NotImplementedError(f"{model} model not implemented")
        self.flat = (self.a - self.b) / self.a
        self.ecc = sqrt(2 * self.flat - self.flat ** 2) # eccentricity  WGS84:0.0818191910428 
        self.ecc2 = (2 * self.flat - self.flat ** 2) # eccentricity**2
        
if __name__ == "__main__":
    # utworzenie obiektu
    print('podaj nazwe elipsoidy')
    print('wybierz jedno z: \n grs80\n wgs84 \n Krasowski')
    geo = Transformacje(model = input(str))
    print('wybierz rodzaj transformacji (wpisz odpowiednia cyfre):\n 1 = X, Y, Z --> phi, lam, h \n 2 = phi, lam, h --> X, Y, Z \n 3 = X, Y, Z --> neu \n 4 = BL --> X2000, Y2000 \n 5 = BL --> X92, Y92')
    info = input(str)
    f = open("phi_lam_h.txt")
    dane = f.read()
    dane = dane.split('\n')
    lista =[0,0,0]
    for i in dane:
        w = i.split(',')
        listaX = []
        for j in w:
            if is_float(j.strip('')) == True:
                listaX.append(float(j))
            else:
                listaX = [0,0,0]
        lista = vstack((lista,listaX))
    lista = array(lista)
    f.close()